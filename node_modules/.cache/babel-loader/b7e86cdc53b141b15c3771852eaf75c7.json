{"ast":null,"code":"import _toConsumableArray from \"/Users/Juico/Desktop/community-chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Juico/Desktop/community-chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Juico/Desktop/community-chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Juico/Desktop/community-chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Juico/Desktop/community-chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Juico/Desktop/community-chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Juico/Desktop/community-chat/src/components/Chat.js\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nimport { Paper, Button, TextField, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails } from '@material-ui/core';\nimport axios from 'axios'; // import ExpandMoreIcon from '@material-ui/icons/ExpandMoreIcon';\n\nimport './Chat.css';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.state = {\n      expanded: null,\n      // clientsIDs: [],\n      id: [],\n      recipient: '',\n      message: '',\n      messages: []\n    };\n    _this.socket = io('localhost:8080');\n\n    _this.socket.on('disconnected', function (data) {\n      removeClient(data);\n    });\n\n    _this.socket.on('RECEIVE_MESSAGE', function (data) {\n      addMessage(data);\n    });\n\n    _this.socket.on('client', function (data) {\n      addId(data);\n    }); // this.socket.on('server-to-client', function(data) {\n    //     addAllClients(data)\n    // })\n    // const addAllClients = data => {\n    //     this.setState({id: data})\n    // }\n\n\n    var addMessage = function addMessage(data) {\n      console.log(data);\n\n      _this.setState({\n        messages: _toConsumableArray(_this.state.messages).concat([data])\n      });\n\n      console.log(_this.state.messages);\n    };\n\n    var addId = function addId(data) {\n      axios.get(\"http://18.191.254.197/getprofile\".concat(data.url)).then(function (user) {\n        var username = user.data.firstName + ' ' + user.data.lastName;\n        var id = data.id;\n        var clients = data.clients;\n\n        for (var i = 0; i < clients.length; i++) {\n          if (clients[i] === id) {\n            var arr = [];\n            var client = {\n              id: id,\n              username: username // this.setState({id: [...this.state.id, client]}, function() {\n              //     console.log(this.state.id)\n              // })\n\n            };\n            arr.push(client);\n\n            _this.socket.emit('clients-to-server', arr);\n\n            _this.socket.on('server-to-client', function (data) {\n              setIDS(data);\n            });\n          }\n        } // this.socket.emit('clients-to-server', this.state.id)\n\n      });\n    };\n\n    var setIDS = function setIDS(data) {\n      _this.setState({\n        id: data\n      });\n    };\n\n    var removeClient = function removeClient(data) {\n      _this.state.id.map(function (client, i) {\n        if (client.id === data) {\n          _this.state.id.splice(i, 1);\n\n          console.log(client.id, data);\n        }\n\n        ;\n      }); // this.state.clientsIDs.map((client, i) => {\n      //     if(client === data) {\n      //         this.state.clientsIDs.splice(i, 1)\n      //     }\n      // })\n\n\n      _this.setState({\n        state: _this.state\n      });\n    };\n\n    _this.sendMessage = function (ev) {\n      ev.preventDefault();\n\n      _this.socket.emit('SEND_MESSAGE', {\n        recipient: _this.state.recipient,\n        author: _this.state.username,\n        message: _this.state.message\n      });\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    _this.handleChange = function (panel) {\n      return function (event, expanded) {\n        _this.setState({\n          expanded: expanded ? panel : false\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.id.map(function (client, i) {\n        return React.createElement(\"div\", {\n          key: client.id,\n          className: \"chat-container\",\n          onClick: function onClick() {\n            _this2.setState({\n              recipient: client.id\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(ExpansionPanel, {\n          expanded: _this2.state.expanded === i,\n          onChange: _this2.handleChange(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(ExpansionPanelSummary, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, client.username)), React.createElement(ExpansionPanelDetails, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: client,\n          className: \"messages\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, _this2.state.messages.map(function (message) {\n          if (client === _this2.state.id) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, message.author, \": \", message.message);\n          }\n        })), React.createElement(\"div\", {\n          className: \"card-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"outlined-bare\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          placeholder: \"Message\",\n          value: _this2.state.message,\n          onChange: function onChange(ev) {\n            return _this2.setState({\n              message: ev.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: _this2.sendMessage,\n          variant: \"outlined\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Send\"))))));\n      })));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/Juico/Desktop/community-chat/src/components/Chat.js"],"names":["React","io","Paper","Button","TextField","ExpansionPanel","ExpansionPanelSummary","Typography","ExpansionPanelDetails","axios","Chat","props","state","expanded","id","recipient","message","messages","socket","on","data","removeClient","addMessage","addId","console","log","setState","get","url","then","user","username","firstName","lastName","clients","i","length","arr","client","push","emit","setIDS","map","splice","sendMessage","ev","preventDefault","author","handleChange","panel","event","target","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport io from \"socket.io-client\"\nimport {Paper, Button, TextField, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails} from '@material-ui/core'\nimport axios from 'axios'\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMoreIcon';\n\nimport './Chat.css'\n\nclass Chat extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            expanded: null,\n            // clientsIDs: [],\n            id: [],\n            recipient: '',\n            message: '',\n            messages: []\n        };\n\n        this.socket = io('localhost:8080');\n\n        this.socket.on('disconnected', function(data) {\n            removeClient(data)\n        })\n\n        this.socket.on('RECEIVE_MESSAGE', function(data){\n            addMessage(data);\n        });\n\n        this.socket.on('client', function(data) {\n            addId(data);\n        })\n\n        // this.socket.on('server-to-client', function(data) {\n        //     addAllClients(data)\n        // })\n\n        // const addAllClients = data => {\n        //     this.setState({id: data})\n        // }\n\n        const addMessage = data => {\n            console.log(data);\n            this.setState({messages: [...this.state.messages, data]});\n            console.log(this.state.messages);\n        };\n\n        const addId = (data) => {\n            axios.get(`http://18.191.254.197/getprofile${data.url}`)\n            .then((user) => {\n                let username = user.data.firstName + ' ' + user.data.lastName\n                let id = data.id\n\n                let clients = data.clients\n\n                for(let i = 0; i < clients.length; i++) {\n                    if(clients[i] === id) {\n                        let arr = [];\n                        let client = {\n                            id: id,\n                            username: username\n                        }\n                        // this.setState({id: [...this.state.id, client]}, function() {\n                        //     console.log(this.state.id)\n                        // })\n                        arr.push(client)\n                        this.socket.emit('clients-to-server', arr)\n                        this.socket.on('server-to-client', function(data) {\n                            setIDS(data)\n                        })\n                    }\n                }\n                // this.socket.emit('clients-to-server', this.state.id)\n            })\n        }\n\n        const setIDS = data => {\n            this.setState({id: data})\n        }\n\n        const removeClient = data => {\n            this.state.id.map((client, i) => {\n                if(client.id === data) {\n                    this.state.id.splice(i, 1)\n                    console.log(client.id, data)\n                };\n            })\n            // this.state.clientsIDs.map((client, i) => {\n            //     if(client === data) {\n            //         this.state.clientsIDs.splice(i, 1)\n            //     }\n            // })\n            this.setState({ state: this.state });\n        }\n\n        this.sendMessage = ev => {\n            ev.preventDefault();\n            this.socket.emit('SEND_MESSAGE', {\n                recipient: this.state.recipient,\n                author: this.state.username,\n                message: this.state.message\n            })\n            this.setState({message: ''});\n        }\n\n        this.handleChange = panel => (event, expanded) => {\n            this.setState({\n              expanded: expanded ? panel : false,\n            });\n        };\n    }\n    \n    render() {\n        return (      \n            <div>\n            <Paper>\n                {this.state.id.map((client, i) => {\n                    return(     \n                    <div key={client.id} className='chat-container' onClick={()=> {this.setState({recipient: client.id})}}>\n                    <ExpansionPanel expanded={this.state.expanded === i} onChange={this.handleChange(i)}>\n                        <ExpansionPanelSummary>\n                        <Typography>{client.username}</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Typography>\n                                <div key={client} className=\"messages\">\n                                    {this.state.messages.map(message => {\n                                        if(client === this.state.id) {\n                                            return (\n                                                <div>{message.author}: {message.message}</div>\n                                            )\n                                        }\n                                    })}\n                                </div>\n                                <div className=\"card-footer\">\n                                    <TextField \n                                        id=\"outlined-bare\" \n                                        margin=\"normal\" \n                                        variant=\"outlined\" \n                                        placeholder=\"Message\" \n                                        value={this.state.message} \n                                        onChange={ev => this.setState({message: ev.target.value})}/>\n                                    <br/>\n                                <Button onClick={this.sendMessage} variant=\"outlined\" color=\"primary\">Send</Button>\n                                </div>\n                        </Typography>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                  </div>\n                )})}\n            </Paper>\n            </div>\n        );\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}